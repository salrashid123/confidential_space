load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_pkg//:pkg.bzl", "pkg_tar")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_push", "oci_tarball", "oci_image_index")
load("@bazel_gazelle//:def.bzl", "gazelle")

gazelle(name = "gazelle")

exports_files(["config.json"])

go_binary(
    name = "main",
    out = "server",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    goos = "linux", 
    goarch = "amd64",     
)

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
    ],
    importpath = "github.com/salrashid123/confidential_space/app",
    visibility = ["//visibility:private"],
    deps = [
        "@com_github_salrashid123_confidential_space_claims//:go_default_library",
        "@org_golang_x_oauth2//google:go_default_library",
        "@com_github_golang_jwt_jwt_v5//:go_default_library",
        "@com_github_lestrrat_go_jwx//jwk:go_default_library",
        "@com_github_gorilla_mux//:go_default_library",
        "@org_golang_x_net//http2:go_default_library",
        "@org_golang_google_api//option:go_default_library",
        "@com_google_cloud_go_pubsub//:go_default_library",
        "@com_google_cloud_go_kms//apiv1:go_default_library",
        "@com_google_cloud_go_kms//apiv1/kmspb:go_default_library",
        "@com_google_cloud_go_compute_metadata//:go_default_library",
        "@com_google_cloud_go_logging//:go_default_library",
        "@org_golang_google_genproto_googleapis_api//monitoredres:monitoredres",
    ],
)

pkg_tar(
    name = "certs_bundle",
    srcs = [
        "//certs:root-ca-operator.crt",
        "//certs:tee-operator.crt",
        "//certs:tee-operator.key",
        "//certs:root-ca-collaborator1.crt",
        "//certs:tee-collaborator1.crt",
        "//certs:tee-collaborator1.key",
        "//certs:root-ca-collaborator2.crt",
        "//certs:tee-collaborator2.crt",
        "//certs:tee-collaborator2.key",
    ],
    package_dir = "/certs",
)

pkg_tar(
    name = "config_bundle",
    srcs = [
        ":config.json",
    ],
    package_dir = "/",
)

pkg_tar(
    name = "app-tar",
    srcs = [":main"],
    package_dir = "/",
)

oci_image(
    name = "server-image",
    base = "@distroless_base",
    tars = [":certs_bundle", ":config_bundle", ":app-tar"],
    labels = {
        "tee.launch_policy.allow_cmd_override": "false",
        "tee.launch_policy.log_redirect": "always",        
    },    
    entrypoint = ["/server"],
    cmd = [],
    env = {},
    exposed_ports = [
        "8081/tcp",
    ],    
)

oci_tarball(
    name = "tar-docker",
    image = "server-image",
    format = "docker",
    repo_tags = ["us-central1-docker.pkg.dev/builder-project/repo1/tee"],
)

oci_image_index(
    name = "app-index",
    images = [
        ":server-image",
    ]
)

oci_tarball(
    name = "tar-oci-index",
    image = ":app-index",
    format = "oci",
    repo_tags = ["us-central1-docker.pkg.dev/builder-project/repo1/tee"],
)

oci_push(
    name = "push-image",
    image = ":server-image",
    repository = "us-central1-docker.pkg.dev/$(PROJECT_ID)/repo1/tee",
    remote_tags = ["server"]
)
