load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@io_bazel_rules_docker//go:image.bzl", "go_image")
load("@io_bazel_rules_docker//container:container.bzl", "container_image", "container_push")
load("@bazel_gazelle//:def.bzl", "gazelle")
load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")

gazelle(name = "gazelle")

exports_files(["config.json"])

go_binary(
    name = "main",
    out = "server",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
    goos = "linux", 
    goarch = "amd64",     
)

pkg_tar(
    name = "certs_bundle",
    srcs = [
        "//certs:root-ca-operator.crt",
        "//certs:tee-operator.crt",
        "//certs:tee-operator.key",
        "//certs:root-ca-collaborator1.crt",
        "//certs:tee-collaborator1.crt",
        "//certs:tee-collaborator1.key",
        "//certs:root-ca-collaborator2.crt",
        "//certs:tee-collaborator2.crt",
        "//certs:tee-collaborator2.key",
    ],
    package_dir = "/certs",
)

container_image(
    name = "server",
    base = "@distroless_base//image",
    entrypoint = ["/server"],
    cmd = [],
    labels = {
        "tee.launch_policy.allow_cmd_override": "false",
        "tee.launch_policy.log_redirect": "always",
    },    
    files = [
        ":main",
        ":config.json",
    ],
    tars = [":certs_bundle"],
    ports = ["8081"],
    repository = "us-central1-docker.pkg.dev/builder-project/repo1/tee",
)

container_push(
   name = "push_image",
   image = ":server",
   format = "Docker",
   registry = "us-central1-docker.pkg.dev",
   repository = "$(PROJECT_ID)/repo1/tee",
   tag = "server",
)

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
        "claims.go",
    ],
    importpath = "github.com/salrashid123/confidential_space/app",
    visibility = ["//visibility:private"],
    deps = [
        "@org_golang_x_oauth2//google:go_default_library",
        "@com_github_golang_jwt_jwt//:go_default_library",
        "@com_github_lestrrat_go_jwx//jwk:go_default_library",
        "@com_github_gorilla_mux//:go_default_library",
        "@org_golang_x_net//http2:go_default_library",
        "@org_golang_google_api//option:go_default_library",
        "@com_google_cloud_go_pubsub//:go_default_library",
        "@com_google_cloud_go_kms//apiv1:go_default_library",
        "@com_google_cloud_go_kms//apiv1/kmspb:go_default_library",
        "@com_google_cloud_go_compute_metadata//:go_default_library",
        "@com_google_cloud_go_logging//:go_default_library",
        "@go_googleapis//google/api:monitoredres_go_proto",
    ],
)

