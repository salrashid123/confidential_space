steps:


  - name: gcr.io/cloud-builders/bazel@sha256:7c34604572d4f001928b98f2b04e2feaebce67b7933e4182b817dcbfe9904bcd
    id: build
    args: ['--output_base=/workspace/build_output', 'build', ':tar-oci-index']

  # - name: gcr.io/cloud-builders/bazel@sha256:7c34604572d4f001928b98f2b04e2feaebce67b7933e4182b817dcbfe9904bcd
  #   id: push
  #   args: ['--output_base=/workspace/build_output', 'run',  ':push-image']
  #   waitFor: ['build']

  - name: gcr.io/cloud-builders/bazel@sha256:7c34604572d4f001928b98f2b04e2feaebce67b7933e4182b817dcbfe9904bcd
    id: oci-archive
    args: ['--output_base=/workspace/build_output', 'cquery', '--output=files', ':tar-oci-index']
    waitFor: ['build']

  - name: 'gcr.io/cloud-builders/gcloud-slim@sha256:e72dd707225c740a2345cf09037bcb1239df8ebb1e714d0d8fdf81efdb02b14c'
    id: token
    entrypoint: /bin/bash
    args:
    - '-c'
    - |
      gcloud auth print-access-token > /workspace/token
    waitFor: ['-']

  # skopeo 1.11.2
  - name: quay.io/containers/skopeo@sha256:b6090d267840441647186a285549a5186d83f32f13b9b33bc77b89e30c52afb0
    id: push
    entrypoint: '/bin/bash'
    args:
    - '-c'
    - |
      skopeo copy --dest-registry-token `cat /workspace/token` --all -f oci  --digestfile /workspace/hash.txt --preserve-digests   oci-archive:bazel-out/k8-fastbuild/bin/tar-oci-index/tarball.tar docker://us-central1-docker.pkg.dev/$PROJECT_ID/repo1/tee:server
    waitFor: ['build', 'oci-archive', 'token']

  - name: docker.io/alpine@sha256:124c7d2707904eea7431fffe91522a01e5a861a624ee31d03372cc1d138a3126
    id: finalize_name
    entrypoint: '/bin/sh'
    args:
    - '-c'
    - |
      echo -n us-central1-docker.pkg.dev/$PROJECT_ID/repo1/tee@`cat /workspace/hash.txt` > /workspace/name_hash.txt
    waitFor: ['push']

  - id: attestations
    name: docker.io/library/ubuntu@sha256:67211c14fa74f070d27cc59d69a7fa9aeff8e28ea118ef3babc295a0428a6d21
    entrypoint: bash
    args:
      - -c
      - |
        echo -n '{ "projectid": "$PROJECT_ID", "buildid": "$BUILD_ID", "foo":"bar", "commitsha": "$COMMIT_SHA"}' > /workspace/predicates.json
    waitFor: ['build']

  - name: gcr.io/cloud-builders/gcloud-slim@sha256:e72dd707225c740a2345cf09037bcb1239df8ebb1e714d0d8fdf81efdb02b14c
    id: get_kms_key
    entrypoint: '/bin/bash'
    args:      
    - '-c'
    - |
      gcloud kms keys versions get-public-key 1 --key key1 --keyring cosignkr --location global | openssl base64 -nopad -A  | sed 's/[=]*$//' > /workspace/kms_pub.txt
    waitFor: ['build']

  - name: gcr.io/projectsigstore/cosign@sha256:280b47054876d415f66a279e666e35157cae6881f3538599710290c70bb75369
    id: sign_kms
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      cosign sign  --tlog-upload=false --annotations=key1=value1 -a dev.cosignproject.cosign/sigalg=ECDSA_P256_SHA256 -a dev.cosignproject.cosign/pub=$(cat /workspace/kms_pub.txt) --key gcpkms://projects/$PROJECT_ID/locations/global/keyRings/cosignkr/cryptoKeys/key1/cryptoKeyVersions/1 $(cat /workspace/name_hash.txt)
    waitFor: ['finalize_name', 'get_kms_key']

  - name: gcr.io/projectsigstore/cosign@sha256:280b47054876d415f66a279e666e35157cae6881f3538599710290c70bb75369
    id: attest_kms
    entrypoint: 'sh'
    args:
    - '-c'
    - |
      cosign attest  --tlog-upload=false --key gcpkms://projects/$PROJECT_ID/locations/global/keyRings/cosignkr/cryptoKeys/key1/cryptoKeyVersions/1 --predicate=/workspace/predicates.json -y $(cat /workspace/name_hash.txt)
    waitFor: ['finalize_name','sign_kms']

serviceAccount: 'projects/$PROJECT_ID/serviceAccounts/cosign@$PROJECT_ID.iam.gserviceaccount.com'
options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'N1_HIGHCPU_32'

